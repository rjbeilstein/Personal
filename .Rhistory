unlink("testdir2")
play()
unlink("testdir2")
list.files
list.files()
file.info("testdir2")
nxt()
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
play()
3.5:17
nxt()
15:1
?`:`
play()
c(1,2):c(5,8)
nxt()
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
play()
my_seq
nxt()
seq_along(my_seq)
rep(0,times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each =10)
q()
dir("specdata")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
}
pollutantmean("specdata","nitrate")
pollutantmean("specdata","nitratoe")
??directory
list.files("specdata")
t<-list.files("specdata")
length(t)
length(id)
length(1:332)
?index
??vector
?in
?index
??index
??search
"220.csv" %in% t
"220.gsv" %in% t
id=1:332
c(id,".csv")
paste(t,".csv",sep="")
paste(id,".csv")
paste(id,".csv",sep="")
c<-NULL
c(c,"hello","there")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=c('Required files are missing from directory "',directory,'": ',missing)
stop(missing)
}
}
pollutantmean('.',"sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=c('Required files are missing from directory "',directory,'": ',missing)
stop(missing)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=paste('Required files are missing from directory "',directory,'":',missing)
stop(missing)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=c('Required files are missing from directory "',directory,'": ',missing)
stop(missing)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=paste('Required files are missing from directory "',directory,'":',missing)
stop(missing)
}
}
pollutantmean("gloop",'sulfate',1:10)
pollutantmean("gloop",'sulfate',1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=c('Required files are missing from directory "',directory,'":  ',paste(missing,sep=" "))
stop(missing)
}
}
pollutantmean("gloop",'sulfate',1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=c('Required files are missing from directory "',directory,'":  ',cat(missing,sep=" "))
stop(missing)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## First, test to see if the pollutant is correct
if (pollutant != "sulfate" && pollutant != "nitrate") {
stop('Pollutant must be either "nitrate" or "sulfate"')
}
## Next, check that the directory contains all of the files we're looking for
## We will print out a list of any missing files
d<-list.files(directory)        # A list of all of the files in the directory
rf<-paste(id,".csv",sep="")     # A list of all of the required files
missing=NULL                    # List of missing files
for (i in id) {
if (! rf[i] %in% d) {
missing=c(missing,rf[i])
}
}
if (0 != length(missing)) {
missing=c('Required files are missing from directory "',directory,'":  ',paste(missing,sep=" "))
stop(missing)
}
}
pollutantmean('.','sulfate',1:10)
pollutantmean('.','sulfate',1:10)
?cat
source('C:/Users/rjb/GitHub/personal/assignment_1.R')
source('C:/Users/rjb/GitHub/personal/assignment_1.R')
pollutantmean(".","nitrate")
source('~/.active-rstudio-document')
pollutantmean(".","nitrate")
pollutantmean("specdata","nitrate")
source('~/.active-rstudio-document')
paste(t,".csv",sep="")
source('C:/Users/rjb/GitHub/personal/assignment_1.R')
pollutantmean("specdata","nitrate")
"hello" %IN% t
"hello" %in% t
"3.csv" %in% t
t
p<-read.csv("globber")
p<-read.csv("specdata/001.csv")
p
spc(p)
p
head(p)
class(p$date)
as.Date(p$Date[3])
class(p$Date)
class(p$Date[3])
class(as.Date(p$Date[3]))
source('C:/Users/rjb/GitHub/personal/assignment_1.R')
source('C:/Users/rjb/GitHub/personal/pollutantmean.R')
source('C:/Users/rjb/GitHub/personal/pollutantmean.R')
pollutantmean("specdata","nitrate")
rf<-pollutantmean("specdata","nitrate")
p<-read.csv(rf[2])
getwd()
rf<-pollutantmean("./specdata","nitrate")
p<-read.csv(rf[2])
p<-read.csv("specdata/003.csv"
)
id<-1:20
sprintf("%03d%.csv",id)
?sprintf
sprintf("%03d.csv",id)
source('C:/Users/rjb/GitHub/personal/pollutantmean.R')
rf<-pollutantmean("./specdata","nitrate")
rf
p<-read.csv(rf[2])
head(p)
View(p)
source('C:/Users/rjb/GitHub/personal/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
t-data.frame(2)
t<-data.frame(0,2)
t
?data.frame
t<-1:10
u<-LETTERS[t]
data.frame(Where=u,What=t)
sum(c(1,0,1,1,1,5))
source('C:/Users/rjb/GitHub/personal/complete.R')
complete("specdata")
s<=c(1,2,NA,3,4,6)
s<-c(1,2,NA,3,4,6)
n<-c(NA,17,3,2,NA,5)
length(s)
length(n)
p<-data,frame(sulfate=s,nitrate=n)
p<-data.frame(sulfate=s,nitrate=n)
p
is.na(p$sulfate)
is.na(p$nitrate)
k<-rf=paste(directory,"/",sprintf("%03d.csv",id),sep="")    # Get the list of files to read
k<-! is.na(p$sulfate) || is.na(p$nitrate)
k
k<-! is.na(p$sulfate) | is.na(p$nitrate)
k
source('C:/Users/rjb/GitHub/personal/complete.R')
complete("specdata")
complete("specdata", 1)
p<-read.csv("specdata/001.csv")
dim(p)
p
length(p$sulfate)
sum(is.na(p$sulfate))
sum(is.na(p$nitrate))
sum(is.na(p$sulfate) | is.na(p$nitrate))
1461-1344
sum(! is.na(p$sulfate) | is.na(p$nitrate))
sum(! (is.na(p$sulfate) | is.na(p$nitrate)))
source('C:/Users/rjb/GitHub/personal/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
complete("specdata")
?cor
pength(p)
length(p)
p
t<-complete("specdata")
summary(t)
head(t)
p<-read.csv("specdata/002.csv")
cr<-cor(p$sulfate,p$nitrate)
cr
cr<-cor(p$sulfate,p$nitrate,na.rm=TRUE)
cr<-cor(p$sulfate,p$nitrate,use="complete.obs")
cr
cr<-cor(p$sulfate,p$nitrate,use="pairwise.complete.obs")
cr
cr<-cor(p$sulfate,p$nitrate,use="complete.obs")
cr
t<-complete("specdata")
length(t)
rows(t)
dim(t)
dim(t)[1]
nrow(t)
head(t)
source('C:/Users/rjb/GitHub/personal/corr.R')
p<-corr("specdata",1000)
p
p<-corr("specdata",100)
p
p<-corr("specdata",500)
p
source('C:/Users/rjb/GitHub/personal/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
numeric(0)
t<-numeric(0)
summary(t)
length(t)
class(cr)
class(t)
source('C:/Users/rjb/GitHub/personal/corr.R')
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
source('C:/Users/rjb/GitHub/personal/corr.R')
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
summary(cr)
cr <- corr("specdata")
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
rm(ls())
ls()
rm("*")
ls()
library(swirl)
library("swirl")
rm(list=ls())
swirl()
?boxplot
play()
data(mtcars)
nxt()
boxplot("mpg ~ cyl",data=mtcars)
boxplot(formula="mpg ~ cyl",data=mtcars)
?boxplot
head(mtcars)
class(mtcars$cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(cars$mpg)
?hist
data(cars)
head(cars)
hist(mtcars$mpg)
Float.MIN_NORMAL
float.MIN_NORMAL
help ("<<-")
numeric(5)
numeric(0)
numeric()
t<-numeric()
t<-numeric(0)
t<<-numeric(0)
bye()
q()
